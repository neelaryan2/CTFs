import os
import binascii

def encrypt(message, key):
    index = 0
    cipher = []

    for m in message:
        cipher.append(m ^ key[index])
        index = (index + 1) % len(key)

    return bytes(cipher)


key1 = os.urandom(2)
key2 = os.urandom(2)

plaintext = open("plaintext.txt", "rb").read().strip()

cipher = encrypt(plaintext, key1)
cipher = encrypt(cipher, key2)

print(cipher.hex())
# 3bee52e300f902f41de700e102e80bac52f41ae552ef1ce55ff41bed17a002e116a05acf26d05ba01bf352e11ca017ee11f20bf006e91dee52f417e31aee1bf107e552f41ae106a011e11cee1df452e217a011f213e319e516ac52e207f452f217f107e900e501a006e817a007f317a01de652e152f31bee15ec17ad07f317a002f217ad01e813f217e452eb17f952f41ae106a01bf352ee1da001ed13ec1ee500a006e813ee52f41ae552ed17f301e115e552e217e91ce752f317ee06ae52c91ca006e81bf352f417e31aee1bf107e55ea013a002ec13e91cf417f806a01bf352f013e900e516a005e906e852e152f213ee16ef1fa001e511f217f452eb17f952a813ec01ef52f217e617f200e516a006ef52e101a013a01dee17ad06e91fe552f013e45bae52d41ae51cac52e513e31aa010e906a01df252e31ae100e111f417f252ef14a006e817a002ec13e91cf417f806a01bf352e51ce300f902f417e452e20ba011ef1fe21bee1bee15a01bf452f71bf41aa006e817a011ef00f217f302ef1ce41bee15a010e906a01df252e31ae100e111f417f252e600ef1fa006e817a002e116a007f31bee15a01fef16f51ee100a013e416e906e91dee5c8a78c817f217a01bf352f41ae552e61ee115ba52ee17f617f22df501e52deb17f92dec17ee15f41adf1ee501f32df41ae11cdf06e813f42def14df06e817df02ec13e91cf417f8068a78d41ae552f217f307ec06e91ce752e31bf01ae500f417f806a005e91eec52e217a01bed02ef01f31be21ee552f41da016e511f20bf006a01df252e200e513eb52e914a006e817a014ef1eec1df71bee15a014ef07f252e31dee16e906e91dee01a013f217a01fe5068a26e817a019e50ba01ff501f452e217a000e11ce41ded52a807ee1be61df21fec0ba016e901f400e910f506e516a013ee16a01bee16e502e51ce417ee06a01de652f41ae552f01ee11bee06e50af45bae78d41ae552eb17f952ed07f306a010e552e106a01ee513f306a013f352ec1dee15a013f352f41ae552f01ee11bee06e50af45c8a26e817a019e50ba01ff501f452ee17f617f252e217a000e507f317e452e91ca005e81dec17a01df252e91ca002e100f45c8a26e817a019e50ba01ff501f452e217a019e502f452e31ded02ec17f417ec0ba001e511f217f452e20ba006e817a011ef1fed07ee1be313f41bee15a002e100f41be501ae78c906a01ae101a013ec01ef52e217e51ca002f21df617ee52f41ae106a013ee0ba011e902e817f252f71bf41aa006e817a002f21df017f206f952ef14a002e500e617e306a001e511f217e30ba01ff501f452f501e552eb17f901a005e906e852e514e617e306e904e51ef952f41ae552f313ed17a000e503f51bf217ed17ee06f352e101a03dd422a019e50bf35cdb41dd52c41be71bf413ec52f617f201e91dee01a01de652ef1ce55ff41bed17a002e116a011e902e817f201a01ae104e552e217e51ca007f317e452e20ba01ce106e91dee01a014ef00a011f21bf41be313ec52e41bf01eef1fe106e911a013ee16a01fe91ee906e100f952e31ded1ff51ce911e106e91dee5ea010f506a006e817a002f21de21ee51ff352ef14a001e511f500e552eb17f952e41bf306f21be207f41bef1ca01fe119e552f41ae51fa01bed02f213e306e911e11ea014ef00a01fef01f452e102f01ee911e106e91dee01ae
